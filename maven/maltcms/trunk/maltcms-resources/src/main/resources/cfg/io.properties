# 
# Maltcms, modular application toolkit for chromatography-mass spectrometry. 
# Copyright (C) 2008-2012, The authors of Maltcms. All rights reserved.
#
# Project website: http://maltcms.sf.net
#
# Maltcms may be used under the terms of either the
#
# GNU Lesser General Public License (LGPL)
# http://www.gnu.org/licenses/lgpl.html
#
# or the
#
# Eclipse Public License (EPL)
# http://www.eclipse.org/org/documents/epl-v10.php
#
# As a user/recipient of Maltcms, you may choose which license to receive the code 
# under. Certain files or entire directories may not be covered by this 
# dual license, but are subject to licenses compatible to both LGPL and EPL.
# License exceptions are explicitly declared in all relevant files or in a 
# LICENSE file in the relevant directories.
#
# Maltcms is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. Please consult the relevant license documentation
# for details.
# 
cross.io.IDataSource = maltcms.io.andims.NetcdfDataSource,maltcms.io.xml.mzXML.MZXMLDataSource,maltcms.io.xml.mzData.MZDataDataSource,maltcms.io.xml.mzML.MZMLDataSource,maltcms.io.csv.FsaTxtDataSource
maltcms.io.xml.mzXML.MZXMLDataSource.dataSources = maltcms.io.xml.mzXML.MZXMLStaxDataSource,maltcms.io.xml.mzXML.MZXMLSaxDataSource 
maltcms.io.csv.FsaTxtDataSource.dataFieldToRead = 3
cross.datastructures.fragments.Fragment.update.attributes = true

#Type of cache to use for variable fragment data cacheing
#Recommended: EHCACHE, Alternative: NONE 
cross.datastructures.fragments.Fragments.cacheType = EHCACHE

#control details of array caching for indexed variables
cross.datastructures.fragments.cachedListImpl = cross.datastructures.fragments.CachedList
cross.datastructures.fragments.FileFragment.useCachedList = false
cross.datastructures.fragments.CachedList.cacheSize = 1024
cross.datastructures.fragments.CachedList.prefetchOnMiss = false

#if true, does not append username and timestamp to output.basedir
omitUserTimePrefix = false
input.basedir = \${sys:user.dir}
input.basedir.recurse = false
output.basedir = \${sys:user.dir}/maltcmsOutput
#if existing files are found in output.basedir, overwrite?
output.overwrite = false

#Whether to use an absolute path as label (if available), or just the filename
#Used for storing pairwise distances/similarities in csv format
maltcms.io.csv.CSVWriter.useFullPathAsLabel = false

#if set to false, creates subdirectories below last set AFragmentCommand
#set by call to IWorkflow.getOutputDirectory(Object cmd)
#otherwise creates files directly in IWorkflow.getOutputDirectory(Object o)
#name of subdir is the classname of o
cross.datastructures.workflow.DefaultWorkflow.saveInFragmentCommandDir = false
#Allows to adjust the generated xsl link in workflow.xml to point to e.g. an URL
cross.datastructures.workflow.DefaultWorkflow.xslPathPrefix = file:///homes/hoffmann/workspace/Maltcms/release/res/xslt/

#configuration for zipping of workflow results is available in xml/pipelines/workflowDefaults.xml

#url where metabolite db is at, including port
metabolite.db = http://default@127.0.0.1:16232

#Save structural data as ncml?
ucar.nc2.NetcdfFile.saveNCML = false

#Netcdf fill values for data types
ucar.nc2.NetcdfFile.fillValueFloat = 9.9692099683868690e+36f
ucar.nc2.NetcdfFile.fillValueDouble = 9.9692099683868690e+36
ucar.nc2.NetcdfFile.fillValueInt = -2147483647L
ucar.nc2.NetcdfFile.fillValueShort = -32767
ucar.nc2.NetcdfFile.fillValueByte = -127
ucar.nc2.NetcdfFile.fillValueChar = 0

maltcms.io.andims.NetcdfDataSource.scanDimensionVars = \${andims.var.scan_index},\${andims.var.total_intensity},\${andims.var.scan_acquisition_time},\${andims.var.point_count},\${andims.var.flag_count},\${andims.var.a_d_sampling_rate},\${andims.var.scan_duration},\${andims.var.mass_range_min},\${andims.var.mass_range_max},\${andims.var.scan_type},\${andims.var.resolution}

maltcms.io.andims.NetcdfDataSource.scanDimensionName = \${andims.dimension.scan_number}
maltcms.io.andims.NetcdfDataSource.pointDimensionVars = \${andims.var.mass_values},\${andims.var.intensity_values}
maltcms.io.andims.NetcdfDataSource.pointDimensionName = \${andims.dimension.point_number}
maltcms.io.andims.NetcdfDataSource.errorDimensionVars = \${andims.var.error_log}
maltcms.io.andims.NetcdfDataSource.errorDimensionName = \${andims.dimension.error_number}
maltcms.io.andims.NetcdfDataSource.instrumentDimensionVars = \${andims.var.instrument_name},\${andims.var.instrument_id},\${andims.var.instrument_mfr},\${andims.var.instrument_model},\${andims.var.instrument_sw_version},\${andims.var.instrument_os_version}
maltcms.io.andims.NetcdfDataSource.instrumentDimensionName = \${andims.dimension.instrument_number}
