#  Copyright (C) 2008-2012 Nils Hoffmann
#  Nils.Hoffmann A T CeBiTec.Uni-Bielefeld.DE
#
#  This file is part of Cross/Maltcms.
#
#  Cross/Maltcms is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Cross/Maltcms is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Cross/Maltcms.  If not, see <http://www.gnu.org/licenses/>.
#
#  $Id$
cross.io.IDataSource = maltcms.io.andims.NetcdfDataSource,maltcms.io.xml.mzXML.MZXMLDataSource,maltcms.io.xml.mzData.MZDataDataSource,maltcms.io.xml.mzML.MZMLDataSource,maltcms.io.csv.FsaTxtDataSource
maltcms.io.xml.mzXML.MZXMLDataSource.dataSources = maltcms.io.xml.mzXML.MZXMLStaxDataSource,maltcms.io.xml.mzXML.MZXMLSaxDataSource 
maltcms.io.csv.FsaTxtDataSource.dataFieldToRead = 3
cross.datastructures.fragments.Fragment.update.attributes = true

#control details of array caching for indexed variables
cross.datastructures.fragments.cachedListImpl = cross.datastructures.fragments.CachedList
cross.datastructures.fragments.FileFragment.useCachedList = false
cross.datastructures.fragments.CachedList.cacheSize = 1024
cross.datastructures.fragments.CachedList.prefetchOnMiss = false

#if true, does not append username and timestamp to output.basedir
omitUserTimePrefix = false
input.basedir = ${sys:user.dir}
input.basedir.recurse = false
output.basedir = ${sys:user.dir}/maltcmsOutput
#if existing files are found in output.basedir, overwrite?
output.overwrite = false

#Whether to use an absolute path as label (if available), or just the filename
#Used for storing pairwise distances/similarities in csv format
maltcms.io.csv.CSVWriter.useFullPathAsLabel = false

#if set to false, creates subdirectories below last set AFragmentCommand
#set by call to IWorkflow.getOutputDirectory(Object cmd)
#otherwise creates files directly in IWorkflow.getOutputDirectory(Object o)
#name of subdir is the classname of o
cross.datastructures.workflow.DefaultWorkflow.saveInFragmentCommandDir = false
#Allows to adjust the generated xsl link in workflow.xml to point to e.g. an URL
cross.datastructures.workflow.DefaultWorkflow.xslPathPrefix = file:///homes/hoffmann/workspace/Maltcms/release/res/xslt/
#Alternatively, if you want to have all files zipped into an archive
# use cross.io.misc.DefaultMatchAllFileFilter
#All non-matching files will be deleted when Maltcms exits!
cross.datastructures.workflow.DefaultWorkflow.resultFileFilter = cross.io.misc.DefaultConfigurableFileFilter
cross.io.misc.DefaultConfigurableFileFilter.fileTypesToKeep = png,jpg,jpeg,csv,txt,tsv,properties,svg,xml
cross.io.misc.DefaultConfigurableFileFilter.prefixesToMatch = alignment
cross.io.misc.DefaultConfigurableFileFilter.suffixesToMatch = ChromatogramWarp
#Whether workflow results should be zipped
cross.io.misc.WorkflowZipper.zipWorkflow = false
#Whether workflow results which have not been zipped should be deleted
#when the virtual machine terminates
cross.io.misc.WorkflowZipper.deleteOnExit = false

#Whether to use retention indices within the alignment, this option is overridden when -ri RIFILE.txt,... is given on the commandline
anchors.use = false 
anchors.use.variable = ${var.anchors.retention_scans}
anchors.class = maltcms.commands.fragments.io.CSVAnchorReader

#url where metabolite db is at, including port
metabolite.db = http://default@127.0.0.1:16232


#Save structural data as ncml?
ucar.nc2.NetcdfFile.saveNCML = false

#Netcdf fill values for data types
ucar.nc2.NetcdfFile.fillValueFloat = 9.9692099683868690e+36f
ucar.nc2.NetcdfFile.fillValueDouble = 9.9692099683868690e+36
ucar.nc2.NetcdfFile.fillValueInt = -2147483647L
ucar.nc2.NetcdfFile.fillValueShort = -32767
ucar.nc2.NetcdfFile.fillValueByte = -127
ucar.nc2.NetcdfFile.fillValueChar = 0

maltcms.io.andims.NetcdfDataSource.scanDimensionVars = ${andims.var.scan_index},${andims.var.total_intensity},${andims.var.scan_acquisition_time},${andims.var.point_count},${andims.var.flag_count},${andims.var.a_d_sampling_rate},${andims.var.scan_duration},${andims.var.mass_range_min},${andims.var.mass_range_max},${andims.var.scan_type},${andims.var.resolution}

maltcms.io.andims.NetcdfDataSource.scanDimensionName = ${andims.dimension.scan_number}
maltcms.io.andims.NetcdfDataSource.pointDimensionVars = ${andims.var.mass_values},${andims.var.intensity_values}
maltcms.io.andims.NetcdfDataSource.pointDimensionName = ${andims.dimension.point_number}
maltcms.io.andims.NetcdfDataSource.errorDimensionVars = ${andims.var.error_log}
maltcms.io.andims.NetcdfDataSource.errorDimensionName = ${andims.dimension.error_number}
maltcms.io.andims.NetcdfDataSource.instrumentDimensionVars = ${andims.var.instrument_name},${andims.var.instrument_id},${andims.var.instrument_mfr},${andims.var.instrument_model},${andims.var.instrument_sw_version},${andims.var.instrument_os_version}
maltcms.io.andims.NetcdfDataSource.instrumentDimensionName = ${andims.dimension.instrument_number}
