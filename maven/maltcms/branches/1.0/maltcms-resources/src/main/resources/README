###############################################################################
Requirements:
Java Runtime Environment (JRE) version 1.6.0, http://java.sun.com/javase/6/
Apache ant version 1.7.1 or greater, http://ant.apache.org/

WINDOWS/ALL:
You can start the 32 bit commandline version by typing

>java -jar maltcms.jar

within the basedir of maltcms, which will print out the input
options that you can supply.

Alternatively, on a 64 bit system and with 64 bit VM you can call

>java -d64 -jar maltcms.jar

Sometimes, the default amount of memory used by the JAVA VM is 
not sufficient. You can then call

>java -Xms1G -Xmx2G -jar maltcms.jar

where -Xms1G sets the minimum amount of memory used by the VM to 
1GByte of Ram and -Xmx2G sets the limit of the maximum amount of memory 
available to maltcms to 2GBytes. If you have more RAM installed, you can
always increase the latter limit.

NOTE:   If you use java on a 32 bit architecture and a 32 bit VM, 2G 
	might not be available. Using java on 64 bit architectures
	and with a 64 bit VM allows higher amounts of memory to be
	allocated.

To define custom properties, you need to pass the -c argument to
maltcms:

>java -Xms1G -Xmx2G -jar maltcms.jar -c cfg/default.properties

will simply load the default properties from the subdirectory cfg.

ChromA: To execute the standard pipeline for GC- and LC-MS, use 
>java -jar maltcms.jar -c cfg/chroma.properties

ChromA4D: To execute the available pipelines for GCxGC-MS, 
have a look at the configuration files in cfg/ prefixed with "4D".
These should give you a hint, where to start.

UNIX/LINUX/MACOS:
Alternatively, maltcms can be launched via the scripts in the scripts/
directory. They will try to guess the location of your java installation.
In case of failure, simply add a file "javahome" to the directory in which 
this README is located, consisting of one line holding the path to your JRE.

Libraries contained in lib/ need to be in classpath,
which is built automatically when calling 'scripts/maltcms.sh'

NOTE:	The scripts will always prompt for the installation directory of 
	maltcms, if you do not set the environment variable MALTCMSDIR
	to the installation location. We recommend to add 

		export MALTCMSDIR=/path/to/your/maltcms/

	to your $HOME/.bashrc or $HOME/.profile file.
	Alternatively, simply overwrite the environment variable within
	scripts/maltcms.sh and scripts/maltcms-interactive.sh to set 
	it to a fixed location.

###############################################################################

Running Maltcms:
>java -Xms1G -Xmx2G -jar maltcms.jar -i <INPUTDIR> -o <OUTPUTDIR> -f <FILES>
Required inputs are:
-i <INPUTDIR> (e.g. /vol/data)
-o <OUTPUTDIR> (e.g. /vol/output)
-f <FILES> (e.g. "*.cdf")

If you do not give any arguments, maltcms will print all available arguments
with a short explanation.

If you prefer a graphical wizard to help you create a configuration:
>java -Xms1G -Xmx2G -jar maltcms.jar -g 

###############################################################################

Running Maltcms the old way (this may sometimes be preferrable):
>scripts/maltcms.sh -- -i <INPUTDIR> -o <OUTPUTDIR> -f <FILES>
Required inputs are:
-i <INPUTDIR> (e.g. /vol/data)
-o <OUTPUTDIR> (e.g. /vol/output)
-f <FILES> (e.g. "*.cdf")

>scripts/maltcms.sh -- -h
prints command-line options for the script with explanations.

For interactive input of the parameters:
>scripts/maltcms-interactive.sh
which will ask you interactively for the most important things.
It will provide defaults, where appropriate.

If you prefer a graphical wizard to help you create a configuration:
>scripts/maltcms.sh -exec maltcms.ui.wizard.PipelineWizard -- 

###############################################################################
Remarks:
Currently, netCDF compatible input and output is 
supported, mzXML input works reliably for MS1 data, output is
currently redirected to netCDF format. Additionally, mzData is supported 
as input format, but again, output is redirected to netCDF format. 
Recently, read support for mzML has been added via the jmzml library.

To get some insight into the parameters used by Maltcms and possible
alternatives, consult the properties files in cfg/, especially
 * alignment.properties
 * preprocessing.properties
 * graphics.properties

Custom configuration files can be provided to maltcms.sh and 
maltcms-interactive.sh, as well as to maltcms.jar using the -c option.
Those custom options then override the default values.

###############################################################################
File format for Anchors:
Anchor files start with a file designation in their first line:
Path can be omitted, if ORIGINAL_DATA_FILE and anchor file are both located 
in input basedirectory (cmdline option -i). Otherwise, the absolute path to
the original file has to be given.

>NAME_OF_ORIGINAL_DATA_FILE.cdf

The second line defines the column names:
Name	RI	RT	Scan

All following lines contain information for one anchor each:

RI1	-	-	230
RI2	-	-	430

etc.

Note that columns RI and RT are optional, Scan and Name are required.
Anchor names should be identical for matched compounds.

Full example:
File Example1.txt would look like this:
>Example1.cdf
Name	RI	RT	Scan
RI1	-	-	230
RI2	-	-	430
RI3	-	-	600
	
File Example2.txt would look like this:
>Example2.cdf
Name	RI	RT	Scan
RI1	-	-	234
RI2	-	-	437
RI3	-	-	598

###############################################################################
File format for Retention Indices:
RI files start with a file designation in their first line:
Path can be omitted, if ORIGINAL_DATA_FILE and ri file are both located 
in input basedirectory (cmdline option -i). Otherwise, the absolute path to
the original file has to be given. It is also possible to specify a single RI
file on the commandline, in which case the retention times defined in that 
reference will be used for RI calculation of all chromatograms. Beware that 
this may be less accurate and you will need to increase the RI match tolerance 
for database searches.

>NAME_OF_ORIGINAL_DATA_FILE.cdf

The second line defines the column names:
Name    RT  Scan    N

All following lines contain information for one anchor each:

RI1	-	-	230
RI2	-	-	430

etc.

Note that columns RI and RT are optional, Scan and Name are required.
Anchor names should be identical for matched compounds.

Full example:
File Example1.txt would look like this:
>Example1.cdf
Name	RI	RT	Scan
RI1	-	-	230
RI2	-	-	430
RI3	-	-	600
	
File Example2.txt would look like this:
>Example2.cdf
Name	RI	RT	Scan
RI1	-	-	234
RI2	-	-	437
RI3	-	-	598
