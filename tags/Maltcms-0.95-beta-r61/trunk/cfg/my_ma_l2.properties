#which proxy class to use to apply the path obtained from alignment
warp = ${maltcms.commands.fragments.warp.AWarp}
maltcms.commands.fragments.warp.AWarp = maltcms.commands.fragments.warp.PathWarp

#which class to use to determine the pairwise distances
pairwise.distances = maltcms.commands.fragments.PairwiseDistanceCalculator 
pairwise.distances.distance = ${alignment.algorithm}
#true for pairs with first element, false for all possible unique pairs
maltcms.commands.fragments.PairwiseDistanceCalculator.pairsWithFirstElement = false

#Class used for construction of the alignment guide-tree
#pairwise distance used to build the guide tree
guide.tree = maltcms.commands.fragments.cluster.UPGMAAlgorithm
guide.tree.distance = ${guide.tree.distance.TIC}
guide.tree.distance.TIC = maltcms.commands.distances.dtw.TICDynamicTimeWarp
guide.tree.distance.MZI = maltcms.commands.distances.dtw.MZIDynamicTimeWarp

default.varloader = maltcms.commands.fragments.DefaultVarLoader

pipeline = ${anchors.class},${default.varloader},${dense.arrays},${pairwise.distances},${guide.tree}
include = my_l2.properties
