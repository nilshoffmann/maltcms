#which proxy class to use to apply the path obtained from alignment
warp = ${maltcms.commands.fragments.warp.AWarp}
maltcms.commands.fragments.warp.AWarp = maltcms.commands.fragments.warp.PathWarp
maltcms.commands.fragments.warp.PathWarp.average = false


#which class to use to determine the pairwise distances
pairwise.distances = maltcms.commands.fragments.PairwiseDistanceCalculator 
pairwise.distances.distance = ${alignment.algorithm}
maltcms.commands.fragments.PairwiseDistanceCalculator.pairsWithFirstElement = false
#Normalize pairwise distances to be between 0 and 1
#If a similarity was used, entries will be normalized to 0 up to 1, but 
#invers -> snorm = (s-min(s))/(max(s)-min(s)) -> 1-snorm
maltcms.commands.fragments.PairwiseDistanceCalculator.normalizeToDistances = true
#Class used for construction of the alignment guide-tree
guide.tree.class = maltcms.commands.fragments.cluster.UPGMAAlgorithm
#guide.tree.execution = maltcms.commands.fragments.multiplealignment.MultipleAlignment
#guide.tree.distance = maltcms.commands.distances.dense.PNormDistance
#pairwise distance used to build the guide tree
guide.tree.distance = ${guide.tree.distance.MZI}
guide.tree.distance.TIC = maltcms.commands.distances.dtw.OLDTICDynamicTimeWarp
guide.tree.distance.MZI = maltcms.commands.distances.dtw.MZIDynamicTimeWarp

#Whether to use retention indices within the alignment, this option is overridden when -ri RIFILE.txt,... is given on the commandline
anchors.use = false 
anchors.use.variable = ${var.anchors.retention_scans}
anchors.class = maltcms.commands.fragments.io.CSVAnchorReader

maltcms.commands.distances.PWScanDistance.penalize_scan_diff = false

metabolite.db = http://default@127.0.0.1:16232

default.varloader = maltcms.commands.fragments.DefaultVarLoader

maltcms.commands.distances.ArrayCorr.returnCoeffDeterm = false

maltcms.commands.fragments.warp.ChromatogramWarp.indexVar = ${var.scan_index}
maltcms.commands.fragments.warp.ChromatogramWarp.indexedVars = ${var.mass_values},${var.intensity_values} 
maltcms.commands.fragments.warp.ChromatogramWarp.plainVars = ${var.scan_acquisition_time},${var.total_intensity},${var.scan_index}

#For details on the permitted pipeline elements, see README.FRAGMENTCOMMANDS
pipeline = ${anchors.class},maltcms.commands.fragments.DefaultVarLoader,${dense.arrays},maltcms.commands.fragments.TICPeakFinder,maltcms.commands.fragments.assignment.PeakCliqueAssignment,${pairwise.distances},maltcms.commands.fragments.alignment.CenterStarAlignment
